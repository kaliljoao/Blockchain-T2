{"remainingRequest":"C:\\Projetos22\\Champz\\Front\\node_modules\\babel-loader\\lib\\index.js!C:\\Projetos22\\Champz\\Front\\src\\services\\Service.js","dependencies":[{"path":"C:\\Projetos22\\Champz\\Front\\src\\services\\Service.js","mtime":1599529513056},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1596475673821},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\babel-loader\\lib\\index.js","mtime":1596475673696}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Projetos22/Champz/Front/src/services/Service.js"],"names":["ApiClient","require","stringifyUrl","Service","apiClient","route","data","post","resp","put","patch","delete","get","query","requestURL","url"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;;eACyBC,OAAO,CAAC,cAAD,C;IAAxBC,Y,YAAAA,Y;;IAEaC,O;;;AACnB,qBAAc;AAAA;;AACZ,SAAKC,SAAL,GAAiB,IAAIJ,SAAJ,EAAjB;AACD;;;;;;;+CAEiBK,K,EAAOC,I;;;;;;;uBACJ,KAAKF,SAAL,CAAeG,IAAf,CAAoBF,KAApB,EAA2BC,IAA3B,C;;;AAAbE,gBAAAA,I;iDACCA,I;;;;;;;;;;;;;;;;;;;;;gDAGQH,K,EAAOC,I;;;;;;;uBACH,KAAKF,SAAL,CAAeK,GAAf,CAAmBJ,KAAnB,EAA0BC,IAA1B,C;;;AAAbE,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;gDAGUH,K,EAAOC,I;;;;;;;uBACL,KAAKF,SAAL,CAAeM,KAAf,CAAqBL,KAArB,EAA4BC,IAA5B,C;;;AAAbE,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;gDAGWH,K,EAAOC,I;;;;;;;uBACN,KAAKF,SAAL,CAAeO,MAAf,CAAsBN,KAAtB,EAA6BC,IAA7B,C;;;AAAbE,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;gDAGQH,K;;;;;;;uBACI,KAAKD,SAAL,CAAeQ,GAAf,CAAmBP,KAAnB,C;;;AAAbG,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIHK,gBAAAA,K,GAAQ,E;AACNC,gBAAAA,U,GAAaZ,YAAY,CAAC;AAC9Ba,kBAAAA,GAAG,QAD2B;AAE9BF,kBAAAA,KAAK,EAAEA;AAFuB,iBAAD,C;;uBAIZ,KAAKT,SAAL,CAAeQ,GAAf,CAAmBE,UAAnB,C;;;AAAbN,gBAAAA,I;kDACCA,I;;;;;;;;;;;;;;;;;;;;;SArCUL,O","sourcesContent":["import ApiClient from \"./ApiClient\";\nconst { stringifyUrl } = require(\"query-string\");\n\nexport default class Service {\n  constructor() {\n    this.apiClient = new ApiClient();\n  }\n\n  async postRequest(route, data) {\n    const resp = await this.apiClient.post(route, data);\n    return resp;\n  }\n\n  async putRequest(route, data) {\n    const resp = await this.apiClient.put(route, data);\n    return resp;\n  }\n\n  async patchRequest(route, data) {\n    const resp = await this.apiClient.patch(route, data);\n    return resp;\n  }\n\n  async deleteRequest(route, data) {\n    const resp = await this.apiClient.delete(route, data);\n    return resp;\n  }\n\n  async getRequest(route) {\n    const resp = await this.apiClient.get(route);\n    return resp;\n  }\n\n  async getTestUrl() {\n    var query = {};\n    const requestURL = stringifyUrl({\n      url: `User`,\n      query: query,\n    });\n    const resp = await this.apiClient.get(requestURL);\n    return resp;\n  }\n}\n"]}]}
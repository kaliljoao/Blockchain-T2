{"remainingRequest":"C:\\Projetos22\\Champz\\Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projetos22\\Champz\\Front\\src\\views\\dashboard\\matches\\Matches.vue?vue&type=style&index=0&id=9be8bfdc&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Projetos22\\Champz\\Front\\src\\views\\dashboard\\matches\\Matches.vue","mtime":1600043882952},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1596475863666},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1596475866724},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\postcss-loader\\src\\index.js","mtime":1596475866122},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1596476009412},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1596476014775},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1596475673821},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\vue-loader\\lib\\index.js","mtime":1596475866724}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNoYW1wekZvbnQgew0KICBmb250LXNpemU6IDE1cHg7DQogIGZvbnQtd2VpZ2h0OiA1MDA7DQogIGZvbnQtZmFtaWx5OiBzeXN0ZW0tdWk7DQp9DQoNCi50YWJsZSB7DQogIGhlaWdodDogNjF2aDsNCn0NCg0KLmNoYW1wekRpdmlkZXIgew0KICBoZWlnaHQ6IDY0dmg7DQp9DQouY2hhbXB6S25vY2tvdXQgew0KICBoZWlnaHQ6IDIwdmg7DQp9DQouY2hhbXB6TWF0Y2hlcyB7DQogIGhlaWdodDogNjd2aDsNCiAgb3ZlcmZsb3cteTogYXV0bzsNCn0NCg=="},{"version":3,"sources":["Matches.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Matches.vue","sourceRoot":"src/views/dashboard/matches","sourcesContent":["<template>\r\n  <v-container v-if=\"!loading\">\r\n    <!-- <v-btn\r\n      v-show=\"choice==false\"\r\n      style=\"text-align: center;\"\r\n      class=\"btn btn-success\"\r\n      @click=\"choice=true; loading=true; initializeGroup()\"\r\n    >Generate Group Matches</v-btn>\r\n    <v-btn\r\n      v-show=\"choice==false\"\r\n      style=\"text-align: center;\"\r\n      class=\"btn btn-success\"\r\n      @click=\"choice=true; getGroups();\"\r\n    >Continue With Latest Matchups</v-btn>-->\r\n    <div>\r\n      <v-card>\r\n        <v-toolbar color=\"primary\" dark>\r\n          <v-btn\r\n            v-if=\"currentGroupIndex\"\r\n            fab\r\n            text\r\n            large\r\n            @click=\"currentGroupIndex--; currentGroup=groups[currentGroupIndex]; final=false;\"\r\n          >\r\n            <v-icon dark large>mdi-chevron-left</v-icon>\r\n          </v-btn>\r\n          <v-toolbar-title class=\"mx-auto\">{{currentGroup.group}}</v-toolbar-title>\r\n          <v-btn fab text large @click=\"next_stage_click()\">\r\n            <v-icon dark large>mdi-chevron-right</v-icon>\r\n          </v-btn>\r\n        </v-toolbar>\r\n        <v-row>\r\n          <v-col v-if=\"currentGroupIndex==0\" cols=\"12\" md=\"8\">\r\n            <v-row>\r\n              <v-col cols=\"12\" md=\"11\">\r\n                <table v-if=\"currentGroupIndex==0\" class=\"table table-striped ml-7\">\r\n                  <!-- <template v-slot:default> -->\r\n                  <thead>\r\n                    <tr>\r\n                      <th class=\"champzFont\" scope=\"col\">Team</th>\r\n                      <th class=\"champzFont\" scope=\"col\">P</th>\r\n                      <th class=\"champzFont\" scope=\"col\">W</th>\r\n                      <th class=\"champzFont\" scope=\"col\">D</th>\r\n                      <th class=\"champzFont\" scope=\"col\">L</th>\r\n                      <th class=\"champzFont\" scope=\"col\">GF</th>\r\n                      <th class=\"champzFont\" scope=\"col\">GA</th>\r\n                      <th class=\"champzFont\" scope=\"col\">GD</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr v-for=\"(team, i) in table\" :key=\"i\">\r\n                      <td class=\"champzFont\">\r\n                        <!-- <img style=\"width:30px;\" :src=\"team[0].image_link\" /> -->\r\n                        {{getTeamParticipant(team[0].participant).name.toUpperCase()}}\r\n                      </td>\r\n                      <td class=\"champzFont\">{{team[1].P}}</td>\r\n                      <td class=\"champzFont\">{{team[1].W}}</td>\r\n                      <td class=\"champzFont\">{{team[1].D}}</td>\r\n                      <td class=\"champzFont\">{{team[1].L}}</td>\r\n                      <td class=\"champzFont\">{{team[1].GF}}</td>\r\n                      <td class=\"champzFont\">{{team[1].GA}}</td>\r\n                      <td class=\"champzFont\">{{team[1].GD}}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                  <!-- </template> -->\r\n                </table>\r\n              </v-col>\r\n              <v-col cols=\"12\" md=\"1\" class=\"champzDivider\">\r\n                <v-divider class=\"ml-8\" vertical></v-divider>\r\n              </v-col>\r\n            </v-row>\r\n          </v-col>\r\n          <v-col\r\n            cols=\"12\"\r\n            :md=\"currentGroupIndex? 12:4\"\r\n            :class=\"currentGroupIndex? 'champzKnockout':'champzMatches'\"\r\n          >\r\n            <v-simple-table\r\n              v-if=\"groups.length>0\"\r\n              :class=\"currentGroupIndex? 'mx-8':'mr-12'\"\r\n            >\r\n              <template v-slot:default>\r\n                <thead class=\"thead-dark\">\r\n                  <tr>\r\n                    <th class=\"champzFont\" scope=\"col\">Match</th>\r\n                    <th class=\"champzFont\" scope=\"col\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr v-for=\"(match, i) in currentGroup.matches\" :key=\"i\">\r\n                    <td\r\n                      class=\"champzFont text-center\"\r\n                      v-if=\"match.goals_team_1 == null && match.goals_team_2 == null\"\r\n                    >\r\n                      {{getTeamParticipant(getTeamById(match.team_1).participant).name.toUpperCase()}}\r\n                      <!-- <img\r\n                style=\"width:30px;\"\r\n                :src=\"getTeamById(match.team_1).image_link\"\r\n                      />-->\r\n                      X\r\n                      <!-- <img style=\"width:30px;\" :src=\"getTeamById(match.team_2).image_link\" /> -->\r\n                      {{getTeamParticipant(getTeamById(match.team_2).participant).name.toUpperCase()}}\r\n                    </td>\r\n                    <td class=\"champzFont text-center\" v-else>\r\n                      {{getTeamParticipant(getTeamById(match.team_1).participant).name.toUpperCase()}}\r\n                      <!-- <img\r\n                style=\"width:30px;\"\r\n                :src=\"getTeamById(match.team_1).image_link\"\r\n                      />-->\r\n                      {{match.goals_team_1}} X\r\n                      {{match.goals_team_2}}\r\n                      <!-- <img\r\n                style=\"width:30px;\"\r\n                :src=\"getTeamById(match.team_2).image_link\"\r\n                      />-->\r\n                      {{getTeamParticipant(getTeamById(match.team_2).participant).name.toUpperCase()}}\r\n                    </td>\r\n                    <td>\r\n                      <v-btn small fab color=\"primary\" @click=\"getMatch(match)\">\r\n                        <v-icon small>mdi-pencil</v-icon>\r\n                      </v-btn>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </template>\r\n            </v-simple-table>\r\n          </v-col>\r\n        </v-row>\r\n        <div class=\"text-center\">\r\n      <v-btn\r\n      large\r\n      class=\"mx-auto mb-12\"\r\n      light\r\n      color=\"primary\"\r\n        v-if=\"final\"\r\n        v-on:click=\"generateChampzFile()\"\r\n      >Generate Champz File</v-btn>\r\n      </div>\r\n      </v-card>\r\n      <v-spacer></v-spacer>\r\n      <a @click=\"resetConfirmationModal=true\">Reset matches</a>\r\n      <v-dialog v-model=\"resetConfirmationModal\" width=\"40%\">\r\n        <v-card>\r\n          <v-card-title>\r\n            <h3>Are you sure that you want to reset the matches? All of the current groups are going to be erased.</h3>\r\n          </v-card-title>\r\n          <v-card-text>\r\n            <v-card-actions class=\"text-center\">\r\n              <v-btn class=\"mx-auto\" color=\"red\" @click=\"initializeGroup()\">Reset</v-btn>\r\n            </v-card-actions>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-dialog>\r\n    </div>\r\n    <!-- Register Score Modal -->\r\n    <v-dialog v-model=\"registerScoreModal\" width=\"40%\">\r\n      <v-card>\r\n        <v-card-title>\r\n          <h5>REGISTER SCORE</h5>\r\n        </v-card-title>\r\n        <v-card-text>\r\n          <form v-on:submit.prevent=\"registerScore()\">\r\n            <v-row>\r\n              <v-col cols=\"12\" md=\"3\">\r\n                <span class=\"champzFont mr-2 mt-1\" style=\"float: right\">{{getTeamParticipant(getTeamById(currentMatch.team_1).participant).name}}</span>\r\n              </v-col>\r\n              <v-col cols=\"12\" md=\"2\">\r\n                <v-text-field\r\n                  outlined\r\n                  dense\r\n                  type=\"number\"\r\n                  v-model=\"currentMatch.goals_team_1\"\r\n                  min=\"0\"\r\n                  required=\"required\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" md=\"2\">\r\n                <span class=\"champzFont ml-7 mt-1\">X</span>\r\n              </v-col>\r\n              <v-col cols=\"12\" md=\"2\">\r\n                <v-text-field\r\n                  outlined\r\n                  dense\r\n                  type=\"number\"\r\n                  v-model=\"currentMatch.goals_team_2\"\r\n                  min=\"0\"\r\n                  required=\"required\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" md=\"3\">\r\n                <span class=\"champzFont ml-3 mt-1\" style=\"float: left\">{{getTeamParticipant(getTeamById(currentMatch.team_2).participant).name}}</span>\r\n              </v-col>\r\n            </v-row>\r\n                <!-- <span>{{getTeamParticipant(getTeamById(currentMatch.team_1).participant).name}}</span>\r\n                <v-text-field\r\n                  style=\"float: right\"\r\n                  type=\"number\"\r\n                  v-model=\"currentMatch.goals_team_1\"\r\n                  min=\"0\"\r\n                  required=\"required\"\r\n                ></v-text-field>\r\n                <span>X</span>\r\n                <v-text-field\r\n                  style=\"float: left\"\r\n                  type=\"number\"\r\n                  v-model=\"currentMatch.goals_team_2\"\r\n                  min=\"0\"\r\n                  required=\"required\"\r\n                ></v-text-field>\r\n                <span>{{getTeamParticipant(getTeamById(currentMatch.team_2).participant).name}}</span> -->\r\n            <v-card-actions>\r\n              <v-btn type=\"button\" color=\"red\" @click=\"registerScoreModal = false\">Close</v-btn>\r\n              <v-btn type=\"submit\" color=\"green\">Save changes</v-btn>\r\n            </v-card-actions>\r\n          </form>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n    <!-- End Register Score modal -->\r\n  </v-container>\r\n\r\n  <v-container v-else>\r\n    <v-progress-circular style=\"margin-left: 50%\" indeterminate size=\"70\" color=\"primary\"></v-progress-circular>\r\n  </v-container>\r\n</template>\r\n\r\n<style lang=\"scss\" scoped>\r\n.champzFont {\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n  font-family: system-ui;\r\n}\r\n\r\n.table {\r\n  height: 61vh;\r\n}\r\n\r\n.champzDivider {\r\n  height: 64vh;\r\n}\r\n.champzKnockout {\r\n  height: 20vh;\r\n}\r\n.champzMatches {\r\n  height: 67vh;\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport Service from \"@/services/Service\";\r\nexport default {\r\n  name: \"Matches\",\r\n\r\n  data: () => ({\r\n    service: new Service(),\r\n    loading: true,\r\n    choice: false,\r\n    final: false,\r\n    registerScoreModal: false,\r\n    resetConfirmationModal: false,\r\n    participants: [],\r\n    groupMatches: [],\r\n    plTeams: [],\r\n    groups: [],\r\n    matches: [],\r\n    table: [],\r\n    currentMatch: {},\r\n    currentGroupIndex: 0,\r\n    currentGroup: {},\r\n  }),\r\n  mounted: function () {\r\n    this.getGroups();\r\n    this.getParticipants();\r\n    this.getPLTeams();\r\n    // this.initializeGroup();\r\n  },\r\n  methods: {\r\n    next_stage_click() {\r\n      if (this.currentGroupIndex == 0) {\r\n        this.knockoutStageButtonClick();\r\n      } else if (!this.currentGroupIndex == 0 && !this.final) {\r\n        this.nextKnockoutStageButtonClick();\r\n      }\r\n    },\r\n    getPLTeams: function () {\r\n      this.service\r\n        .getRequest(\"/api/team?league=72\")\r\n        .then((response) => {\r\n          this.plTeams = response;\r\n          this.loading = false;\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    getParticipants: function () {\r\n      this.service\r\n        .getRequest(\"/api/participant/\")\r\n        .then((response) => {\r\n          this.participants = response;\r\n          this.loading = false;\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    getTeamParticipant: function (id) {\r\n      var participant = {};\r\n      this.participants.forEach((element) => {\r\n        if (element.id === id) {\r\n          participant = element;\r\n          return participant;\r\n        }\r\n      });\r\n      return participant;\r\n    },\r\n    getTeamById: function (id) {\r\n      var team = {};\r\n      this.plTeams.forEach((element) => {\r\n        if (element.id === id) {\r\n          team = element;\r\n          return team;\r\n        }\r\n      });\r\n      return team;\r\n    },\r\n    getMatch: function (match) {\r\n      this.currentMatch = Object.assign({}, match);\r\n      this.registerScoreModal = true;\r\n\r\n      // this.loading = true;\r\n      // url = \"/api/match/\" + id + \"/\";\r\n      // this.service\r\n      //   .get(url)\r\n      //   .then((response) => {\r\n      //     this.currentMatch = response.data;\r\n      //     $(\"#registerScoreModal\").modal(\"show\");\r\n      //     this.loading = false;\r\n      //   })\r\n      //   .catch((err) => {\r\n      //     this.loading = false;\r\n      //     console.log(err);\r\n      //   });\r\n    },\r\n    deleteGroups: function () {\r\n      var i;\r\n      var groupsToDelete = this.groups.slice(this.currentGroupIndex + 1);\r\n      for (i = 0; i < groupsToDelete.length; i++) {\r\n        this.deleteGroup(groupsToDelete[i].id);\r\n      }\r\n    },\r\n    deleteGroup: function (id) {\r\n      this.loading = true;\r\n      var url = \"/api/group/\" + id + \"/\";\r\n      this.service\r\n        .deleteRequest(url)\r\n        .then((response) => {\r\n          this.loading = false;\r\n          this.getGroups();\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    registerScore: function () {\r\n      this.loading = true;\r\n      var url = \"/api/match/\" + this.currentMatch.id + \"/\";\r\n      this.service\r\n        .patchRequest(url, this.currentMatch)\r\n        .then((response) => {\r\n          this.loading = false;\r\n          this.currentMatch = response;\r\n          if (this.currentGroupIndex + 1 < this.groups.length) {\r\n            this.deleteGroups();\r\n          } else {\r\n            this.getGroups();\r\n          }\r\n          this.registerScoreModal = false;\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    getGroups: function () {\r\n      this.loading = true;\r\n      this.service\r\n        .getRequest(\"/api/group/\")\r\n        .then((response) => {\r\n          this.groups = response;\r\n          if (this.groups.length == 0) {\r\n            this.initializeGroup();\r\n          } else {\r\n            this.groups.forEach((element) => {\r\n              element.matches = [];\r\n            });\r\n            this.getMatches();\r\n            this.getGroupTable();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    getGroupTable: function () {\r\n      this.service\r\n        .getRequest(\"/api/table/\" + this.groups[0].id)\r\n        .then((response) => {\r\n          this.table = response;\r\n          this.loading = false;\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    initializeGroup: function () {\r\n      this.loading = true;\r\n      this.service\r\n        .postRequest(\"/api/start_group/\")\r\n        .then((response) => {\r\n          this.getGroups();\r\n          this.resetConfirmationModal = false;\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    knockoutStageButtonClick: function () {\r\n      if (this.groups.length > 1) {\r\n        this.currentGroupIndex += 1;\r\n        this.currentGroup = this.groups[this.currentGroupIndex];\r\n      } else {\r\n        this.loading = true;\r\n        this.generateWildcard();\r\n      }\r\n    },\r\n    nextKnockoutStageButtonClick: function () {\r\n      if (this.currentGroupIndex + 1 < this.groups.length) {\r\n        this.currentGroupIndex += 1;\r\n        this.currentGroup = this.groups[this.currentGroupIndex];\r\n        if (this.currentGroup.matches.length == 1) {\r\n          this.final = true;\r\n        }\r\n      } else {\r\n        this.loading = true;\r\n        if (this.currentGroupIndex == 1) {\r\n          this.generateSemis();\r\n        } else {\r\n          this.generateFinal();\r\n        }\r\n      }\r\n    },\r\n    generateFirstKnockout: function () {\r\n      this.loading = true;\r\n      this.service\r\n        .postRequest(\"/api/generate_1st_knockout/\")\r\n        .then((response) => {\r\n          this.currentGroupIndex += 1;\r\n          this.getGroups();\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    generateWildcard: function () {\r\n      this.loading = true;\r\n      this.service\r\n        .postRequest(\"/api/generate_wildcards/\")\r\n        .then((response) => {\r\n          this.currentGroupIndex += 1;\r\n          this.getGroups();\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    generateSemis: function () {\r\n      this.loading = true;\r\n      this.service\r\n        .postRequest(\"/api/generate_semis/\")\r\n        .then((response) => {\r\n          this.currentGroupIndex += 1;\r\n          this.getGroups();\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    generateFinal: function () {\r\n      this.loading = true;\r\n      this.service\r\n        .postRequest(\r\n          \"/api/generate_final/\" + this.groups[this.currentGroupIndex].id\r\n        )\r\n        .then((response) => {\r\n          this.getGroups();\r\n          this.currentGroupIndex += 1;\r\n          this.final = true;\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    generateChampzFile: function () {\r\n      this.loading = true;\r\n      this.service\r\n        .postRequest(\"/api/end_champz/\")\r\n        .then((response) => {\r\n          this.loading = false;\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n    matchToGroup: function (match) {\r\n      this.groups.forEach((element) => {\r\n        if (match.group == element.id) {\r\n          element.matches.push(match);\r\n          return;\r\n        }\r\n      });\r\n    },\r\n    getMatches: function () {\r\n      this.loading = true;\r\n      this.service\r\n        .getRequest(\"/api/match/\")\r\n        .then((response) => {\r\n          this.matches = response;\r\n          this.matches.forEach((element) => {\r\n            this.matchToGroup(element);\r\n          });\r\n          this.currentGroup = this.groups[this.currentGroupIndex];\r\n          if (this.currentGroup.matches.length == 1) {\r\n            this.final = true;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    },\r\n  },\r\n  computed: {},\r\n};\r\n</script>\r\n"]}]}
{"remainingRequest":"C:\\Projetos22\\Champz\\Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projetos22\\Champz\\Front\\src\\views\\dashboard\\draft\\Draft.vue?vue&type=template&id=3ae09a24&","dependencies":[{"path":"C:\\Projetos22\\Champz\\Front\\src\\views\\dashboard\\draft\\Draft.vue","mtime":1599448553888},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1596475673821},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1596475866724},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1596476014775},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1596475673821},{"path":"C:\\Projetos22\\Champz\\Front\\node_modules\\vue-loader\\lib\\index.js","mtime":1596475866724}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}